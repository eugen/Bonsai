def .tasks nil

defun .task .name .body {
   tasks .add name body
   tasks .reschedule
}

task .build {
   system "gcc *.c"
   system "ghc *.hs"
}

defun .invoke-task .name {
   (tasks name) .exec
   tasks .lock
   tasks .log (Time now)
   tasks .log ("executed task" .+ name)
   tasks .unlock
}

defun .create-counter .start .step {
   step .++
}

defun .main {
   def .limit 10
   def .text "some string"
   def .counter (create-counter 0 limit)

   while { counter > 0 } {
      print "the counter still hasn't reached " x
   }
}

defun .using_mock .disposable .block {
    print .entering_try_finally
    block .Invoke
    print .disposing
}